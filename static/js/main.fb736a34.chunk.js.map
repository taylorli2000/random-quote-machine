{"version":3,"sources":["assets/twitter.svg","components/QuoteBox.js","components/App.js","index.js"],"names":["colors","QuoteBox","useState","getColor","color","setColor","a","getQuote","quote","setQuote","text","author","Math","floor","random","length","fetch","response","json","quotes","Container","className","style","minHeight","backgroundColor","transition","fluid","minWidth","maxWidth","Card","Body","ButtonGroup","size","Button","href","encodeURIComponent","variant","marginRight","Image","src","twitterImage","rounded","onClick","prevColor","newColor","handleQuoteSwitch","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAe,MAA0B,oC,OCInCA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGa,SAASC,IACtB,MAA0BC,mBAASC,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAAQ,sBAAC,4BAAAI,EAAA,sEACbC,IADa,cAC3BC,EAD2B,yBAE1BC,EAAS,CAAEC,KAAMF,EAAME,KAAMC,OAAQH,EAAMG,UAFjB,4CAAnC,mBAAOH,EAAP,KAAcC,EAAd,KAKA,SAASN,IACP,OAAOH,EAAOY,KAAKC,MAAMD,KAAKE,SAAWd,EAAOe,SARjB,SAsBlBR,IAtBkB,2EAsBjC,8BAAAD,EAAA,sEACyBU,MACrB,4DAFJ,cACQC,EADR,gBAIsBA,EAASC,OAJ/B,cAIQV,EAJR,yBAKSA,EAAMW,OAAO,IALtB,4CAtBiC,kEA8BjC,4BAAAb,EAAA,sEACsBC,IADtB,OACQC,EADR,OAEEC,EAAS,CAAEC,KAAMF,EAAME,KAAMC,OAAQH,EAAMG,SAF7C,4CA9BiC,sBAmCjC,OACE,cAACS,EAAA,EAAD,CACEC,UAAU,mDACVC,MAAO,CACLC,UAAW,QACXC,gBAAiBpB,EACjBqB,WAAY,sBAEdC,OAAK,EAPP,SASE,qBACEJ,MAAO,CACLK,SAAU,QACVC,SAAU,QACVxB,MAAOA,EACPqB,WAAY,sBALhB,SAQE,cAACI,EAAA,EAAD,CAAMR,UAAU,cAAhB,SACE,eAACQ,EAAA,EAAKC,KAAN,WACE,6BAAYT,UAAU,kBAAtB,UACE,mBACEC,MAAO,CACLlB,MAAOA,EACPqB,WAAY,sBAHhB,SAMGjB,EAAME,OAET,wBACEY,MAAO,CAAElB,MAAOA,EAAOqB,WAAY,sBACnCJ,UAAU,yBAFZ,SAIGb,EAAMG,YAIX,eAACoB,EAAA,EAAD,CAAaC,KAAK,KAAKV,MAAO,CAAEK,SAAU,SAA1C,UACE,cAACM,EAAA,EAAD,CACEC,KAAI,mDAA8CC,mBAChD3B,EAAME,MADJ,wBAEQyB,mBAAmB3B,EAAMG,SACrCyB,QAAQ,UACRd,MAAO,CACLe,YAAa,OACbb,gBAAiBpB,EACjBqB,WAAY,sBARhB,SAWE,cAACa,EAAA,EAAD,CACEC,IAAKC,EACLC,SAAO,EACPnB,MAAO,CAAEM,SAAU,YAGvB,cAACK,EAAA,EAAD,CACEG,QAAQ,UACRd,MAAO,CACLE,gBAAiBpB,EACjBqB,WAAY,sBAEdiB,QAAS,WApFrBrC,GAAS,SAACsC,GAER,IADA,IAAIC,EAAWD,EACRC,IAAaD,GAClBC,EAAWzC,IAGb,OADYyC,KAjBiB,mCAkGjBC,IARJ,mCCvGCC,MAJf,WACE,OAAO,cAAC7C,EAAD,K,MCET8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb736a34.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/twitter.740c588f.svg\";","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, Card, Container, Image } from \"react-bootstrap\";\r\nimport twitterImage from \"../assets/twitter.svg\";\r\n\r\nconst colors = [\r\n  \"#16a085\",\r\n  \"#27ae60\",\r\n  \"#2c3e50\",\r\n  \"#f39c12\",\r\n  \"#e74c3c\",\r\n  \"#9b59b6\",\r\n  \"#FB6964\",\r\n  \"#342224\",\r\n  \"#472E32\",\r\n  \"#BDBB99\",\r\n  \"#77B1A9\",\r\n  \"#73A857\",\r\n];\r\n\r\nexport default function QuoteBox() {\r\n  const [color, setColor] = useState(getColor());\r\n  const [quote, setQuote] = useState(async () => {\r\n    const quote = await getQuote();\r\n    return setQuote({ text: quote.text, author: quote.author });\r\n  });\r\n\r\n  function getColor() {\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  }\r\n\r\n  function handleColorSwitch() {\r\n    setColor((prevColor) => {\r\n      let newColor = prevColor;\r\n      while (newColor === prevColor) {\r\n        newColor = getColor();\r\n      }\r\n      prevColor = newColor;\r\n      return prevColor;\r\n    });\r\n  }\r\n\r\n  async function getQuote() {\r\n    const response = await fetch(\r\n      \"https://goquotes-api.herokuapp.com/api/v1/random?count=1\"\r\n    );\r\n    const quote = await response.json();\r\n    return quote.quotes[0];\r\n  }\r\n\r\n  async function handleQuoteSwitch() {\r\n    const quote = await getQuote();\r\n    setQuote({ text: quote.text, author: quote.author });\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        backgroundColor: color,\r\n        transition: \"all 1s ease-in-out\",\r\n      }}\r\n      fluid\r\n    >\r\n      <div\r\n        style={{\r\n          minWidth: \"500px\",\r\n          maxWidth: \"650px\",\r\n          color: color,\r\n          transition: \"all 1s ease-in-out\",\r\n        }}\r\n      >\r\n        <Card className=\"text-center\">\r\n          <Card.Body>\r\n            <blockquote className=\"blockquote mb-5\">\r\n              <p\r\n                style={{\r\n                  color: color,\r\n                  transition: \"all 1s ease-in-out\",\r\n                }}\r\n              >\r\n                {quote.text}\r\n              </p>\r\n              <footer\r\n                style={{ color: color, transition: \"all 1s ease-in-out\" }}\r\n                className=\"blockquote-footer mt-2\"\r\n              >\r\n                {quote.author}\r\n              </footer>\r\n            </blockquote>\r\n\r\n            <ButtonGroup size=\"lg\" style={{ minWidth: \"200px\" }}>\r\n              <Button\r\n                href={`https://twitter.com/intent/tweet?text=%22${encodeURIComponent(\r\n                  quote.text\r\n                )}%22%0A â€”${encodeURIComponent(quote.author)}`}\r\n                variant=\"primary\"\r\n                style={{\r\n                  marginRight: \"1rem\",\r\n                  backgroundColor: color,\r\n                  transition: \"all 1s ease-in-out\",\r\n                }}\r\n              >\r\n                <Image\r\n                  src={twitterImage}\r\n                  rounded\r\n                  style={{ maxWidth: \"25px\" }}\r\n                ></Image>\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  transition: \"all 1s ease-in-out\",\r\n                }}\r\n                onClick={() => {\r\n                  handleColorSwitch();\r\n                  handleQuoteSwitch();\r\n                }}\r\n              >\r\n                New Quote\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import QuoteBox from \"./QuoteBox\";\n\nfunction App() {\n  return <QuoteBox />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}