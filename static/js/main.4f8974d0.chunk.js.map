{"version":3,"sources":["assets/twitter.svg","components/QuoteBox.js","components/App.js","index.js"],"names":["_g","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTwitter","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","preserveAspectRatio","ref","id","d","fill","quotesData","ForwardRef","colors","QuoteBox","useState","getColor","color","setColor","text","author","quote","setQuote","Math","floor","random","a","fetch","response","json","handleQuoteSwitch","newQuote","quotes","useEffect","getQuotesData","then","Container","className","style","minHeight","backgroundColor","transition","fluid","minWidth","maxWidth","Card","Body","ButtonGroup","size","Button","href","encodeURIComponent","variant","marginRight","borderRadius","maxHeight","onClick","prevColor","newColor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f8974d0.chunk.js","sourcesContent":["var _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTwitter(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"256px\",\n    height: \"209px\",\n    viewBox: \"0 0 256 209\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256,25.4500259 C246.580841,29.6272672 236.458451,32.4504868 225.834156,33.7202333 C236.678503,27.2198053 245.00583,16.9269929 248.927437,4.66307685 C238.779765,10.6812633 227.539325,15.0523376 215.57599,17.408298 C205.994835,7.2006971 192.34506,0.822 177.239197,0.822 C148.232605,0.822 124.716076,24.3375931 124.716076,53.3423116 C124.716076,57.4586875 125.181462,61.4673784 126.076652,65.3112644 C82.4258385,63.1210453 43.7257252,42.211429 17.821398,10.4359288 C13.3005011,18.1929938 10.710443,27.2151234 10.710443,36.8402889 C10.710443,55.061526 19.9835254,71.1374907 34.0762135,80.5557137 C25.4660961,80.2832239 17.3681846,77.9207088 10.2862577,73.9869292 C10.2825122,74.2060448 10.2825122,74.4260967 10.2825122,74.647085 C10.2825122,100.094453 28.3867003,121.322443 52.413563,126.14673 C48.0059695,127.347184 43.3661509,127.988612 38.5755734,127.988612 C35.1914554,127.988612 31.9009766,127.659938 28.694773,127.046602 C35.3777973,147.913145 54.7742053,163.097665 77.7569918,163.52185 C59.7820257,177.607983 37.1354036,186.004604 12.5289147,186.004604 C8.28987161,186.004604 4.10888474,185.75646 0,185.271409 C23.2431033,200.173139 50.8507261,208.867532 80.5109185,208.867532 C177.116529,208.867532 229.943977,128.836982 229.943977,59.4326002 C229.943977,57.1552968 229.893412,54.8901664 229.792282,52.6381454 C240.053257,45.2331635 248.958338,35.9825545 256,25.4500259\",\n    fill: \"#55acee\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTwitter);\nexport default __webpack_public_path__ + \"static/media/twitter.740c588f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\r\nimport { Button, ButtonGroup, Card, Container } from \"react-bootstrap\";\r\nimport { ReactComponent as TwitterImage } from \"../assets/twitter.svg\";\r\n\r\nconst colors = [\r\n  \"#16a085\",\r\n  \"#27ae60\",\r\n  \"#2c3e50\",\r\n  \"#f39c12\",\r\n  \"#e74c3c\",\r\n  \"#9b59b6\",\r\n  \"#FB6964\",\r\n  \"#342224\",\r\n  \"#472E32\",\r\n  \"#BDBB99\",\r\n  \"#77B1A9\",\r\n  \"#73A857\",\r\n];\r\nlet quotesData;\r\n\r\nexport default function QuoteBox() {\r\n  const [color, setColor] = useState(getColor());\r\n  const [quote, setQuote] = useState({ text: \"\", author: \"\" });\r\n\r\n  function getColor() {\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  }\r\n\r\n  function handleColorSwitch() {\r\n    setColor((prevColor) => {\r\n      let newColor = prevColor;\r\n      while (newColor === prevColor) {\r\n        newColor = getColor();\r\n      }\r\n      prevColor = newColor;\r\n      return prevColor;\r\n    });\r\n  }\r\n\r\n  async function getQuotesData() {\r\n    const response = await fetch(\r\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\r\n    );\r\n    quotesData = await response.json();\r\n  }\r\n\r\n  function handleQuoteSwitch() {\r\n    const newQuote =\r\n      quotesData.quotes[Math.floor(Math.random() * quotesData.quotes.length)];\r\n    setQuote({ text: newQuote.quote, author: newQuote.author });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuotesData().then(handleQuoteSwitch);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        backgroundColor: color,\r\n        transition: \"all 1s ease-in-out\",\r\n      }}\r\n      fluid\r\n    >\r\n      <div\r\n        style={{\r\n          minWidth: \"500px\",\r\n          maxWidth: \"650px\",\r\n          color: color,\r\n          transition: \"all 1s ease-in-out\",\r\n        }}\r\n      >\r\n        <Card className=\"text-center\">\r\n          <Card.Body>\r\n            <blockquote className=\"blockquote mb-5\">\r\n              <p\r\n                style={{\r\n                  color: color,\r\n                  transition: \"all 1s ease-in-out\",\r\n                }}\r\n              >\r\n                {quote.text}\r\n              </p>\r\n              <footer\r\n                style={{ color: color, transition: \"all 1s ease-in-out\" }}\r\n                className=\"blockquote-footer mt-2\"\r\n              >\r\n                {quote.author}\r\n              </footer>\r\n            </blockquote>\r\n\r\n            <ButtonGroup size=\"lg\" style={{ minWidth: \"200px\" }}>\r\n              <Button\r\n                href={`https://twitter.com/intent/tweet?text=%22${encodeURIComponent(\r\n                  quote.text\r\n                )}%22%0A —${encodeURIComponent(quote.author)}`}\r\n                variant=\"primary\"\r\n                style={{\r\n                  marginRight: \"1rem\",\r\n                  backgroundColor: color,\r\n                  transition: \"all 1s ease-in-out\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n              >\r\n                <TwitterImage\r\n                  style={{\r\n                    maxWidth: \"25px\",\r\n                    maxHeight: \"25px\",\r\n                  }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{\r\n                  backgroundColor: color,\r\n                  transition: \"all 1s ease-in-out\",\r\n                  borderRadius: \"5px\",\r\n                }}\r\n                onClick={() => {\r\n                  handleColorSwitch();\r\n                  handleQuoteSwitch();\r\n                }}\r\n              >\r\n                New Quote\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import QuoteBox from \"./QuoteBox\";\n\nfunction App() {\n  return <QuoteBox />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}